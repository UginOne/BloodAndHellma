[gd_resource type="CanvasItemMaterial" load_steps=3 format=1]

[ext_resource path="res://faceNormal.png" type="Texture" id=1]

[sub_resource type="CanvasItemShader" id=1]

_code = {
"fragment": "// just pass the normal

uniform texture normal;
vec2 ywnormal=tex( normal,UV).wy * vec2(2.0,2.0) - vec2(1.0,1.0);
NORMAL=vec3(ywnormal,sqrt(1 - (ywnormal.x * ywnormal.x) - (ywnormal.y * ywnormal.y) ));

",
"fragment_ofs": 0,
"light": "//the tile half size in pixels
vec2 tile_vec=vec2(140,70);
float z_scale = 1.0;
//compute a 3D postion fot thelight
vec3 light_3d = vec3(-LIGHT_VEC.x,LIGHT_HEIGHT,LIGHT_VEC.y);

//rotate the normal map to the same coordinates as the pseudo 3d ponit
//this could be optimized
float r = asin(tile_vec.y/tile_vec.x);
mat3 rot_mat = mat3( vec3(1,0,0), vec3(0,cos(r),-sin(r)), vec3(0,sin(r),cos(r)));
vec3 n =  rot_mat * NORMAL;
n.y=-n.y;

//compute diffuse light
float dp = max(dot(normalize(n),-normalize(light_3d)),0);
LIGHT=vec4(vec3(dp),1.0)*COLOR*LIGHT_COLOR;
",
"light_ofs": 0,
"vertex": "//pass the x1 in local sprite coordinates.
//the sprite center (small red cross) is 0,0
VAR1.xy=SRC_VERTEX;",
"vertex_ofs": 0
}

[resource]

shader/shader = SubResource( 1 )
shader/shading_mode = 0
shader_param/normal = ExtResource( 1 )

